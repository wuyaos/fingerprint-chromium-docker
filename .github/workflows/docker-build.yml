name: Build and Publish Docker Image

on:
  workflow_dispatch:
    inputs:
      FC_VERSION:
        description: "fingerprint-chromium version (e.g. 136.0.7103.113)"
        required: true
        default: "136.0.7103.113"
      BASE_IMAGE:
        description: "Base image type"
        required: true
        default: "ubuntu"
        type: choice
        options:
          - ubuntu
          - alpine

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      DOCKERHUB_REPO: wuyaos/fingerprint-chromium-docker
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Set Dockerfile and tags
        id: config
        run: |
          if [ "${{ inputs.BASE_IMAGE }}" = "alpine" ]; then
            echo "dockerfile=./Dockerfile.alpine" >> $GITHUB_OUTPUT
            echo "suffix=-alpine" >> $GITHUB_OUTPUT
          else
            echo "dockerfile=./Dockerfile" >> $GITHUB_OUTPUT
            echo "suffix=" >> $GITHUB_OUTPUT
          fi

      - name: Extract metadata for Docker Hub (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=raw,value=latest${{ steps.config.outputs.suffix }},enable={{is_default_branch}}
            type=raw,value=${{ inputs.FC_VERSION }}${{ steps.config.outputs.suffix }},enable={{is_default_branch}}
            type=ref,event=tag,suffix=${{ steps.config.outputs.suffix }}
            type=sha,suffix=${{ steps.config.outputs.suffix }}

      - name: Build and push to Docker Hub (amd64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ steps.config.outputs.dockerfile }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            FC_VERSION=${{ inputs.FC_VERSION }}

